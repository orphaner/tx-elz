input {
  beats {
    port => 5044
  }
}

filter {
  if [type] == "textlog" {
    grok {
      match => {
        "message" => "^%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:level}%{SPACE}\[%{DATA:thread_name}\]%{SPACE}%{WORD:class_name}:%{SPACE}%{GREEDYDATA:message}"
      }
      overwrite => [ "message" ]
    }

    # store the date of the logs inside the technical elasticsearch timestamp field
    date {
      match => ["timestamp", "yyyy-MM-dd HH:mm:ss,SSS"]
      timezone => "Europe/Paris"
    }
  }
}
filter {
  if [type] == "jsonlog" {
    json {
      source => "message"
    }

    mutate {
      rename => { "logger_name" => "class_name" }
    }
  }
}
filter {
  if [type] == "compositelog" {
    json {
      source => "message"
    }
  }
}


output {
  # Sortie vers elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    ssl => "false"

    # 1 index par jour
    index => "logstash-%{+YYYY.MM.dd}"

    # on gÃ¨re le template depuis logstash
    manage_template => true
    template => "/etc/logstash/template/template.json"
  }

  # DÃ©bug : permet d'afficher le document json dans la console
  stdout { codec => rubydebug }
}
